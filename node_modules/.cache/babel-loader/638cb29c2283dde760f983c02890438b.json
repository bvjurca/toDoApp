{"ast":null,"code":"import _objectSpread from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapActions, mapState } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\nexport default {\n  name: 'CreateTask',\n  computed: _objectSpread({}, mapState(userStore, ['user'])),\n  data: function data() {\n    return {\n      title: '',\n      isComplete: false\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(taskStore, ['insertTask', 'fetchTasks'])), {}, {\n    handleNewTask: function handleNewTask() {\n      var taskData = {\n        title: this.title,\n        user_id: this.user.id,\n        isComplete: this.isComplete\n      };\n      this.insertTask(taskData.title, taskData.user_id, taskData.isComplete);\n    }\n  })\n};","map":{"version":3,"mappings":";AASA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,YADO;EAEbC,QAAQ,oBACHJ,QAAQ,CAACE,SAAD,EAAY,CAAC,MAAD,CAAZ,CADL,CAFK;EAKbG,IALa,kBAKN;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,UAAU,EAAE;IAFP,CAAP;EAID,CAVY;EAWbC,OAAO,kCACFT,UAAU,CAACE,SAAD,EAAY,CAAC,YAAD,EAAe,YAAf,CAAZ,CADR;IAELQ,aAFK,2BAEW;MACd,IAAMC,QAAO,GAAI;QACfJ,KAAK,EAAE,KAAKA,KADG;QAEfK,OAAO,EAAE,KAAKC,IAAL,CAAUC,EAFJ;QAGfN,UAAU,EAAE,KAAKA;MAHF,CAAjB;MAKA,KAAKO,UAAL,CAAgBJ,QAAQ,CAACJ,KAAzB,EAAgCI,QAAQ,CAACC,OAAzC,EAAkDD,QAAQ,CAACH,UAA3D;IACD;EATI;AAXM,CAAf","names":["mapActions","mapState","taskStore","userStore","name","computed","data","title","isComplete","methods","handleNewTask","taskData","user_id","user","id","insertTask"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/TaskList.vue"],"sourcesContent":["<template>\n  <h1>Time to create a new Task</h1>\n  <p>Task Details</p>\n  <input aria-label=\"title\" v-model=\"title\" required /> <br />\n  <input aria-label=\"checkbox\" type=\"checkbox\" v-model=\"isComplete\" /><br />\n  <button @click=\"handleNewTask\">Crear tarea</button>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'CreateTask',\n  computed: {\n    ...mapState(userStore, ['user']),\n  },\n  data() {\n    return {\n      title: '',\n      isComplete: false,\n    };\n  },\n  methods: {\n    ...mapActions(taskStore, ['insertTask', 'fetchTasks']),\n    handleNewTask() {\n      const taskData = {\n        title: this.title,\n        user_id: this.user.id,\n        isComplete: this.isComplete,\n      };\n      this.insertTask(taskData.title, taskData.user_id, taskData.isComplete);\n    },\n  },\n};\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module"}