{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"addtask\"\n};\nvar _hoisted_2 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = function () {\n      return _ctx.submitForm && _ctx.submitForm.apply(_ctx, arguments);\n    })\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    required: \"\",\n    id: \"task\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.title = $event;\n    }),\n    placeholder: \"Type something...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.title]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.newTask && _ctx.newTask.apply(_ctx, arguments);\n    }),\n    disabled: _ctx.title.length < 4\n  }, \"Add task\", 8\n  /* PROPS */\n  , _hoisted_2), _createCommentVNode(\"supabase needs it to be at least 4 chars\")], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;;uBAARC,oBAYM,KAZN,cAYM,CAXJC,oBAUO,MAVP,EAUO;IAVAC,QAAM;MAAA,OAAEC,yDAAF;IAAA;EAUN,CAVP,mBACEF,oBAKE,OALF,EAKE;IAJAG,QAAQ,EAAR,EAIA;IAHAL,EAAE,EAAC,MAGH;;aAFSI,aAAKE;MAEd;IADAC,WAAW,EAAC;EACZ,CALF;;EAAA,kBAGWH,eAIbF,oBAC8C,QAD9C,EAC8C;IADrCM,OAAK;MAAA,OAAEJ,mDAAF;IAAA,EACgC;IAA7CK,QAAQ,EAAEL,WAAMM,MAAN,GAAY;EAAuB,CAD9C,EAC6B,UAD7B,EACqC;EAAA;EADrC,EACqCC,UADrC,GAC+CC,gEAT/C;;EAAA,CAWI,CAZN","names":["id","_createElementBlock","_createElementVNode","onSubmit","_ctx","required","$event","placeholder","onClick","disabled","length","_hoisted_2","_createCommentVNode"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/taskToBeAdded.vue"],"sourcesContent":["<template>\n  <div id='addtask'>\n    <form @submit=\"submitForm\">\n      <input\n        required\n        id=\"task\"\n        v-model=\"title\"\n        placeholder=\"Type something...\"\n      />\n   \n    <button @click=\"newTask\"\n    :disabled=\"title.length < 4\">Add task</button> <!--supabase needs it to be at least 4 chars-->\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"pinia\";\nimport userStore from \"../store/user\";\nimport taskStore from \"../store/task\";\n\nexport default {\n  name: \"taskToBeAdded\",\n  data() {\n    return {\n      title: \"\",\n    };\n  },\n  computed: {\n    ...mapState(userStore, [\"user\"]),\n  },\n  methods: {\n    ...mapActions(taskStore, [\"fetchTasks\", \"addTask\"]),\n    newTask() {\n      const taskContent = { \n        title: this.title,\n        user_id: this.user.id,\n        isComplete: this.isComplete,\n       };\n        this.addTask(taskContent.title, taskContent.user_id, taskContent.isComplete);\n    },\nsubmitForm(e){\n    this.todos.push(\n        {\n            text: this.text,\n            completed: false\n        }\n    );\n    this.text = \"\";\n\n    // To prevent the form from submitting\n     e.preventDefault();\n  },\n  created() {\n    this.fetchTasks();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}