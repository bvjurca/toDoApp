{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, vModelText as _vModelText, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString } from \"vue\";\nvar _hoisted_1 = {\n  key: 0,\n  \"class\": \"emptystate\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://i.imgur.com/qN1iZfK.jpg\",\n  alt: \"task illustration\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"So far, nothing here\", -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Your tasks will appear here once you create them\", -1\n/* HOISTED */\n);\n\nvar _hoisted_5 = [_hoisted_2, _hoisted_3, _hoisted_4];\nvar _hoisted_6 = {\n  \"class\": \"task-in-list\"\n};\nvar _hoisted_7 = [\"onClick\", \"onUpdate:modelValue\", \"id\"];\nvar _hoisted_8 = {\n  \"class\": \"content\"\n};\nvar _hoisted_9 = [\"onUpdate:modelValue\", \"onChange\"];\nvar _hoisted_10 = {\n  key: 0,\n  id: \"done\"\n};\nvar _hoisted_11 = {\n  id: \"date\"\n};\nvar _hoisted_12 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [!_ctx.tasks.length ? (_openBlock(), _createElementBlock(\"section\", _hoisted_1, _hoisted_5)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, function (task) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      \"class\": \"checkbox\",\n      onClick: function onClick($event) {\n        return $options.handleTaskStatus(task.is_complete, task.id);\n      },\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return task.is_complete = $event;\n      },\n      id: task.is_complete\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7), [[_vModelCheckbox, task.is_complete]]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n      \"class\": \"task-name\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return task.title = $event;\n      },\n      style: _normalizeStyle(task.is_complete ? 'text-decoration: line-through' : 'text-decoration:none'),\n      onChange: function onChange($event) {\n        return $options.handleTaskName(task.title, task.id);\n      }\n    }, null, 44\n    /* STYLE, PROPS, HYDRATE_EVENTS */\n    , _hoisted_9), [[_vModelText, task.title]]), task.is_complete ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \" DONE!\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(_this.createdAt), 1\n    /* TEXT */\n    )]), _createElementVNode(\"button\", {\n      id: \"kill\",\n      onClick: function onClick($event) {\n        return $options.deleteTask(task.id);\n      }\n    }, \"Remove\", 8\n    /* PROPS */\n    , _hoisted_12)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;EACW,SAAM;;;8BACbA,oBAAqE,KAArE,EAAqE;EAAhEC,GAAG,EAAC,iCAA4D;EAA1BC,GAAG,EAAC;AAAsB,CAArE;;AAAA;;8BACAF,oBAA6B,IAA7B,EAA6B,IAA7B,EAAI,sBAAJ,EAAwB;AAAA;AAAxB;;8BACAA,oBAAuD,GAAvD,EAAuD,IAAvD,EAAG,kDAAH,EAAmD;AAAA;AAAnD;;kBAFAG,YACAC,YACAC;;EAEE,SAAM;;;;EASD,SAAM;;;;;EAWqBC,EAAE,EAAC;;;EAC3BA,EAAE,EAAC;;;;;;8DA1BoBC,WAAMC,wBAAzCC,oBAIU,SAJV,cAIUC,UAJV,wCAKAV,oBAyBK,IAzBL,cAyBK,oBAxBHS,oBAuBKE,SAvBL,EAuBK,IAvBL,EAuBKC,YAvBcL,UAuBd,EAvBmB,UAAbM,IAAa,EAAT;yBAAfJ,oBAuBK,IAvBL,EAuBK;MAvBsBK,GAAG,EAAED,IAAI,CAACP;IAuBhC,CAvBL,mBACEN,oBAME,OANF,EAME;MALA,SAAM,UAKN;MAJCe,OAAK;QAAA,OAAEC,0BAAiBH,IAAI,CAACI,WAAtB,EAAmCJ,IAAI,CAACP,EAAxC,CAAF;MAAA,CAIN;MAHAY,IAAI,EAAC,UAGL;;eAFSL,IAAI,CAACI,cAAWE;OAEzB;MADOb,EAAE,EAAEO,IAAI,CAACI;IAChB,CANF;;IAAA,kCAIWJ,IAAI,CAACI,gBAGhBjB,oBAaM,KAbN,cAaM,iBAZJA,oBASE,OATF,EASE;MARA,SAAM,WAQN;;eAPSa,IAAI,CAACO,QAAKD;OAOnB;MANCE,KAAK,kBAAeR,IAAI,CAACI,WAAL,2DAAf,CAMN;MADCK,QAAM;QAAA,OAAEN,wBAAeH,IAAI,CAACO,KAApB,EAA2BP,IAAI,CAACP,EAAhC,CAAF;MAAA;IACP,CATF;;IAAA,8BAEWO,IAAI,CAACO,QAUZ,EAFQP,IAAI,CAACI,6BAAjBR,oBAAqD,MAArD,eAAwC,QAAxC,sCAEI,EADJT,oBAA2C,MAA3C,eAA2CuB,uBAAnBC,SAAmB,CAA3C,EAAiC;IAAA;IAAjC,CACI,CAbN,GAcAxB,oBAA8D,QAA9D,EAA8D;MAAtDM,EAAE,EAAC,MAAmD;MAA3CS,OAAK;QAAA,OAAEC,oBAAWH,IAAI,CAACP,EAAhB,CAAF;MAAA;IAAsC,CAA9D,EAA+C,QAA/C,EAAqD;IAAA;IAArD,EAAqDmB,WAArD,EAtBF;GAuBK,CAvBL;;EAAA,CAwBG,EAzBL","names":["_createElementVNode","src","alt","_hoisted_2","_hoisted_3","_hoisted_4","id","_ctx","length","_createElementBlock","_hoisted_5","_Fragment","_renderList","task","key","onClick","$options","is_complete","type","$event","title","style","onChange","_toDisplayString","createdAt","_hoisted_12"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/TaskList.vue"],"sourcesContent":["<template>\n  <section class=\"emptystate\" v-if=\"!tasks.length\">\n    <img src=\"https://i.imgur.com/qN1iZfK.jpg\" alt=\"task illustration\" />\n    <h2>So far, nothing here</h2>\n    <p>Your tasks will appear here once you create them</p>\n  </section>\n  <ul class=\"task-in-list\">\n    <li v-for=\"task in tasks\" :key=\"task.id\">\n      <input\n        class=\"checkbox\"\n        @click=\"handleTaskStatus(task.is_complete, task.id)\"\n        type=\"checkbox\"\n        v-model=\"task.is_complete\"\n        v-bind:id=\"task.is_complete\"\n      />\n      <div class=\"content\">\n        <input\n          class=\"task-name\"\n          v-model=\"task.title\"\n          :style=\"\n            task.is_complete\n              ? 'text-decoration: line-through'\n              : 'text-decoration:none'\n          \"\n          @change=\"handleTaskName(task.title, task.id)\"\n        />\n        <span v-if=\"task.is_complete\" id=\"done\"> DONE!</span>\n        <span id='date'>{{ this.createdAt }}</span>\n      </div>\n      <button id=\"kill\" @click=\"deleteTask(task.id)\">Remove</button>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"pinia\";\nimport taskStore from \"@/store/task\";\n\nexport default {\n  name: \"ShowTasks\",\n  computed: {\n    ...mapState(taskStore, [\"tasks\"]),\n    createdAt() {\n      const created = new Date(this.tasks.inserted_at);\n      return created.toLocaleD;\n    }\n  },\n  methods: {\n    ...mapActions(taskStore, [\"delTask\", \"editStatus\", \"editName\"]),\n\n    deleteTask(taskId) {\n      try {\n        this.delTask(taskId);\n        alert(\"Task deleted. Please refresh page.\");\n      } catch (error) {\n        alert(\"Error: \", error.message);\n      }\n    },\n    handleTaskStatus(task, taskID) {\n      this.editStatus(!task, taskID);\n    },\n\n    handleTaskName(title, taskID) {\n      if (title.length !== 0) {\n        this.editName(title, taskID);\n      } else {\n        alert(\"Empty task? That doesn't make sense\");\n      }\n    },\n  },\n  watch: {\n    tasks(state) {\n      console.log(state);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}