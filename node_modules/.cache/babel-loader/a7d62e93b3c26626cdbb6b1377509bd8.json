{"ast":null,"code":"import _objectSpread from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { mapActions, mapState } from \"pinia\";\nimport userStore from \"../store/user\";\nimport taskStore from \"@/store/task\";\nexport default {\n  name: \"taskToBeAdded\",\n  data: function data() {\n    return {\n      title: \"\"\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(userStore, [\"user\"])), mapState(taskStore, [\"tasks\"])),\n  methods: _objectSpread(_objectSpread({}, mapActions(taskStore, [\"fetchTasks\", \"addTask\"])), {}, {\n    newTask: function newTask() {\n      var taskContent = {\n        title: this.title,\n        user_id: this.user.id,\n        isComplete: this.isComplete\n      };\n      this.addTask(taskContent.title, taskContent.user_id, taskContent.isComplete); //this.querySelector('#task').value = 'Type something...';      clear input attempt:(\n\n      for (var i in tasks) {\n        if (taskContent.title === tasks[i].title) {\n          throw new Error(\"Task already exists\");\n        }\n      }\n    }\n  }),\n  created: function created() {\n    this.fetchTasks();\n  }\n};","map":{"version":3,"mappings":";;;AAgBA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,eADO;EAEbC,IAFa,kBAEN;IACL,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD,CANY;EAObC,QAAQ,kCACHN,QAAQ,CAACC,SAAD,EAAY,CAAC,MAAD,CAAZ,CADL,GAEFD,QAAQ,CAACE,SAAD,EAAY,CAAC,OAAD,CAAZ,CAFN,CAPK;EAWbK,OAAO,kCACFR,UAAU,CAACG,SAAD,EAAY,CAAC,YAAD,EAAe,SAAf,CAAZ,CADR;IAELM,OAFK,qBAEK;MACR,IAAMC,WAAU,GAAI;QAClBJ,KAAK,EAAE,KAAKA,KADM;QAElBK,OAAO,EAAE,KAAKC,IAAL,CAAUC,EAFD;QAGlBC,UAAU,EAAE,KAAKA;MAHC,CAApB;MAKE,KAAKC,OAAL,CAAaL,WAAW,CAACJ,KAAzB,EAAgCI,WAAW,CAACC,OAA5C,EAAqDD,WAAW,CAACI,UAAjE,EANM,CAON;;MACA,KAAK,IAAIE,CAAT,IAAcC,KAAd,EAAqB;QACnB,IAAGP,WAAW,CAACJ,KAAZ,KAAsBW,KAAK,CAACD,CAAD,CAAL,CAASV,KAAlC,EAAyC;UACvC,MAAM,IAAIY,KAAJ,CAAU,qBAAV,CAAN;QACF;MACF;IACJ;EAfK,EAXM;EA4BbC,OA5Ba,qBA4BH;IACR,KAAKC,UAAL;EACD;AA9BY,CAAf","names":["mapActions","mapState","userStore","taskStore","name","data","title","computed","methods","newTask","taskContent","user_id","user","id","isComplete","addTask","i","tasks","Error","created","fetchTasks"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/taskToBeAdded.vue"],"sourcesContent":["<template>\n  <div id='addtask'>\n      <input\n        required\n        ref=\"incomingTask\"\n        id=\"task\"\n        v-model=\"title\"\n        placeholder=\"Type something...\"\n      />\n   \n    <button @click=\"newTask\"\n    :disabled=\"title.length < 4\">Add task</button> <!--supabase needs it to be at least 4 chars-->\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"pinia\";\nimport userStore from \"../store/user\";\nimport taskStore from \"@/store/task\";\n\nexport default {\n  name: \"taskToBeAdded\",\n  data() {\n    return {\n      title: \"\",\n    };\n  },\n  computed: {\n    ...mapState(userStore, [\"user\"]),\n     ...mapState(taskStore, [\"tasks\"]),\n  },\n  methods: {\n    ...mapActions(taskStore, [\"fetchTasks\", \"addTask\"]),\n    newTask() {\n      const taskContent = { \n        title: this.title,\n        user_id: this.user.id,\n        isComplete: this.isComplete,\n       };\n        this.addTask(taskContent.title, taskContent.user_id, taskContent.isComplete);\n        //this.querySelector('#task').value = 'Type something...';      clear input attempt:(\n        for (let i in tasks) {\n          if(taskContent.title === tasks[i].title) {\n            throw new Error(\"Task already exists\");\n          }\n        }\n    }\n  },\n  created() {\n    this.fetchTasks();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}