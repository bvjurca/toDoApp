{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"home\"\n};\nexport function render(_ctx, _cache) {\n  var _component_task_to_be_added = _resolveComponent(\"task-to-be-added\");\n\n  var _component_TaskList = _resolveComponent(\"TaskList\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, \"Hello \" + _toDisplayString(_ctx.user.email), 1\n  /* TEXT */\n  ), _createElementVNode(\"h1\", null, _toDisplayString(_ctx.fakeUserName()) + \"'s to do list\", 1\n  /* TEXT */\n  ), _createVNode(_component_task_to_be_added), _createVNode(_component_TaskList)]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;;;;;;;uBAAXA,oBAMM,KANN,cAMM,CALJC,oBAA6B,GAA7B,EAA6B,IAA7B,EAAG,WAAMC,iBAAGC,UAAKC,KAAR,CAAT,EAAsB;EAAA;EAAtB,CAKI,EAJJH,oBAA0C,IAA1C,EAA0C,IAA1C,EAA0CC,iBAAnCC,mBAAmC,IAAlB,eAAxB,EAAqC;EAAA;EAArC,CAII,EAHJE,aAAoBC,2BAApB,CAGI,EADJD,aAAYE,mBAAZ,CACI,CANN","names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","email","_createVNode","_component_task_to_be_added","_component_TaskList"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <p>Hello {{ user.email }}</p>\n    <h1>{{ fakeUserName() }}'s to do list</h1>\n    <task-to-be-added />\n\n    <TaskList />\n  </div>\n</template>\n\n<script>\nimport taskToBeAdded from \"@/components/taskToBeAdded.vue\";\nimport TaskList from \"@/components/TaskList.vue\";\nimport userStore from \"@/store/user\";\nimport { mapState, mapActions } from \"pinia\";\n\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      const fakeUserName = () => {\n        return this.user.email.slice(0, this.user.email.indexOf(\"@\"));\n      },\n    };\n  },\n  components: { taskToBeAdded, TaskList },\n  computed: {\n    ...mapState(userStore, [\"user\"]),\n  },\n  methods: {\n    ...mapActions(userStore, [\"fetchUser\"]),\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}