{"ast":null,"code":"import _objectSpread from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { defineStore } from \"pinia\";\nimport supabase from \"../supabase/index\";\nexport default defineStore(\"tasks\", {\n  state: function state() {\n    return {\n      tasks: []\n    };\n  },\n  getters: {\n    tasksByDate: function tasksByDate() {\n      return this.tasks.sort(function (a, b) {\n        return a.inserted_at > b.inserted_at ? -1 : 1;\n      });\n    }\n  },\n  actions: {\n    addTask: function addTask(taskName, userId, taskStatus) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$supabase$from$, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return supabase.from(\"tasks\").insert([{\n                  title: taskName,\n                  user_id: userId,\n                  is_complete: taskStatus\n                }]);\n\n              case 2:\n                _yield$supabase$from$ = _context.sent;\n                data = _yield$supabase$from$.data;\n                error = _yield$supabase$from$.error;\n\n                if (!error) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw error;\n\n              case 7:\n                if (data.length) {\n                  _this.tasks.push(data[0]);\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    fetchTasks: function fetchTasks() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$supabase$from$2, tasks;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return supabase.from(\"tasks\").select(\"*\").order(\"id\", {\n                  ascending: false\n                });\n\n              case 2:\n                _yield$supabase$from$2 = _context2.sent;\n                tasks = _yield$supabase$from$2.data;\n                _this2.tasks = tasks.map(function (task) {\n                  return _objectSpread(_objectSpread({}, task), {}, {\n                    inserted_at: new Date(task.inserted_at).toLocaleDateString()\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    delTask: function delTask(taskId) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$supabase$from$3, data, error, taskIndex;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return supabase.from(\"tasks\")[\"delete\"]().match({\n                  id: taskId\n                });\n\n              case 3:\n                _yield$supabase$from$3 = _context3.sent;\n                data = _yield$supabase$from$3.data;\n                error = _yield$supabase$from$3.error;\n\n                if (!error) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                throw error;\n\n              case 8:\n                if (!(data && data.length)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                taskIndex = _this3.tasks.findIndex(function (task) {\n                  return task.id === taskId;\n                });\n                _this3.tasks = _this3.tasks.splice(taskIndex, 1);\n                _context3.next = 14;\n                break;\n\n              case 13:\n                throw new Error(\"Task does not exist\");\n\n              case 14:\n                return _context3.abrupt(\"return\", data);\n\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n                return _context3.abrupt(\"return\", null);\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 17]]);\n      }))();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","supabase","state","tasks","getters","tasksByDate","sort","a","b","inserted_at","actions","addTask","taskName","userId","taskStatus","from","insert","title","user_id","is_complete","data","error","length","push","fetchTasks","select","order","ascending","map","task","Date","toLocaleDateString","delTask","taskId","match","id","taskIndex","findIndex","splice","Error","console"],"sources":["/Users/bogdia/IronHack/toDoApp/src/store/task.js"],"sourcesContent":["import { defineStore } from \"pinia\";\nimport supabase from \"../supabase/index\";\n\nexport default defineStore(\"tasks\", {\n  state: () => ({\n    tasks: [],\n  }),\n  getters: {\n    tasksByDate() {\n      return this.tasks.sort((a, b) =>\n        a.inserted_at > b.inserted_at ? -1 : 1\n      );\n    },\n  },\n  actions: {\n    async addTask(taskName, userId, taskStatus) {\n      const { data, error } = await supabase.from(\"tasks\").insert([{ title: taskName, user_id: userId, is_complete: taskStatus }]);\n      if (error) throw error;\n      if (data.length) {\n        this.tasks.push(data[0]);\n      }\n    },\n\n    async fetchTasks() {\n      const { data: tasks } = await supabase\n        .from(\"tasks\")\n        .select(\"*\")\n        .order(\"id\", { ascending: false });\n      this.tasks = tasks.map((task) => ({\n        ...task,\n        inserted_at: new Date(task.inserted_at).toLocaleDateString(),\n      }));\n    },\n\n    async delTask(taskId) {\n      try {\n        const { data, error } = await supabase\n          .from(\"tasks\")\n          .delete()\n          .match({ id: taskId });\n        if (error) throw error;\n        if (data && data.length) {\n          const taskIndex = this.tasks.findIndex((task) => task.id === taskId);\n          this.tasks = this.tasks.splice(taskIndex, 1);\n        } else {\n          throw new Error(\"Task does not exist\");\n        }\n        return data;\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}