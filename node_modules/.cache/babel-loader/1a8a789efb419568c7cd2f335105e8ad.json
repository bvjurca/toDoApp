{"ast":null,"code":"import _objectSpread from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { defineStore } from 'pinia';\nimport supabase from '../supabase/index';\nexport default defineStore('tasks', {\n  state: function state() {\n    return {\n      tasks: []\n    };\n  },\n  actions: {\n    addTask: function addTask(task) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$supabase$from$, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return supabase.from('tasks').insert(task);\n\n              case 2:\n                _yield$supabase$from$ = _context.sent;\n                data = _yield$supabase$from$.data;\n                error = _yield$supabase$from$.error;\n\n                if (!error) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw error;\n\n              case 7:\n                if (data) {\n                  _this.tasks.push(data);\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    fetchTasks: function fetchTasks() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$supabase$from$2, tasks;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return supabase.from('tasks').select('*').order('id', {\n                  ascending: false\n                });\n\n              case 2:\n                _yield$supabase$from$2 = _context2.sent;\n                tasks = _yield$supabase$from$2.data;\n                // this.tasks = tasks;\n                _this2.tasks = tasks.map(function (task) {\n                  return _objectSpread(_objectSpread({}, task), {}, {\n                    inserted_at: new Date(task.inserted_at).toLocaleDateString()\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","supabase","state","tasks","actions","addTask","task","from","insert","data","error","push","fetchTasks","select","order","ascending","map","inserted_at","Date","toLocaleDateString"],"sources":["/Users/bogdia/IronHack/toDoApp/src/store/task.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport supabase from '../supabase/index';\n\nexport default defineStore('tasks', {\n  state: () => ({\n    tasks: [],\n  }),\n  actions: {\n    async addTask (task) {\n      const { data, error } = await supabase.from('tasks').insert(task);\n      if (error) throw error;\n      if (data) {\n        this.tasks.push(data);\n      }\n    },\n\n  \n\n    async fetchTasks() {\n      const { data: tasks } = await supabase\n        .from('tasks')\n        .select('*')\n        .order('id', { ascending: false });\n      // this.tasks = tasks;\n      this.tasks = tasks.map((task) => ({\n        ...task,\n        inserted_at: new Date(task.inserted_at).toLocaleDateString(),\n      }));\n    },\n  },\n});\n"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,eAAeD,WAAW,CAAC,OAAD,EAAU;EAClCE,KAAK,EAAE;IAAA,OAAO;MACZC,KAAK,EAAE;IADK,CAAP;EAAA,CAD2B;EAIlCC,OAAO,EAAE;IACDC,OADC,mBACQC,IADR,EACc;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACWL,QAAQ,CAACM,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8BF,IAA9B,CADX;;cAAA;gBAAA;gBACXG,IADW,yBACXA,IADW;gBACLC,KADK,yBACLA,KADK;;gBAAA,KAEfA,KAFe;kBAAA;kBAAA;gBAAA;;gBAAA,MAEFA,KAFE;;cAAA;gBAGnB,IAAID,IAAJ,EAAU;kBACR,KAAI,CAACN,KAAL,CAAWQ,IAAX,CAAgBF,IAAhB;gBACD;;cALkB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMpB,CAPM;IAWDG,UAXC,wBAWY;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACaX,QAAQ,CACnCM,IAD2B,CACtB,OADsB,EAE3BM,MAF2B,CAEpB,GAFoB,EAG3BC,KAH2B,CAGrB,IAHqB,EAGf;kBAAEC,SAAS,EAAE;gBAAb,CAHe,CADb;;cAAA;gBAAA;gBACHZ,KADG,0BACTM,IADS;gBAKjB;gBACA,MAAI,CAACN,KAAL,GAAaA,KAAK,CAACa,GAAN,CAAU,UAACV,IAAD;kBAAA,uCAClBA,IADkB;oBAErBW,WAAW,EAAE,IAAIC,IAAJ,CAASZ,IAAI,CAACW,WAAd,EAA2BE,kBAA3B;kBAFQ;gBAAA,CAAV,CAAb;;cANiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUlB;EArBM;AAJyB,CAAV,CAA1B"},"metadata":{},"sourceType":"module"}