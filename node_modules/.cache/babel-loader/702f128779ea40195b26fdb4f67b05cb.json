{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    required: \"\",\n    id: \"task\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $options.newTask = $event;\n    }),\n    placeholder: \"Type something...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $options.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.newTask();\n    })\n  }, \"Add task\")]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAUM,KAVN,EAUM,IAVN,EAUM,iBATFC,oBAME,OANF,EAME;IALAC,IAAI,EAAC,MAKL;IAJAC,QAAQ,EAAR,EAIA;IAHAC,EAAE,EAAC,MAGH;;aAFSC,mBAAOC;MAEhB;IADAC,WAAW,EAAC;EACZ,CANF;;EAAA,kBAIWF,mBAKT,EADJJ,oBAA4C,QAA5C,EAA4C;IAAnCO,OAAK;MAAA,OAAEH,kBAAF;IAAA;EAA8B,CAA5C,EAA2B,UAA3B,CACI,CAVN","names":["_createElementBlock","_createElementVNode","type","required","id","$options","$event","placeholder","onClick"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/taskToBeAdded.vue"],"sourcesContent":["<template>\n  <div>\n      <input\n        type=\"text\"\n        required\n        id=\"task\"\n        v-model=\"newTask\"\n        placeholder=\"Type something...\"\n      />\n   \n    <button @click=\"newTask()\">Add task</button>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"pinia\";\nimport taskStore from \"@/store/task\";\n\nexport default {\n  name: \"taskToBeAdded\",\n  data() {\n    return {\n      newTitle: \"\",\n    };\n  },\n  computed: {\n    ...mapState(taskStore, [\"task\"]),\n  },\n  methods: {\n    ...mapActions(taskStore, [\"fetchTasks\", \"addTask\"]),\n    newTask() {\n        this.addTask(this.newTitle, this.user.id);\n        this.newTitle = '';\n    }\n  },\n  created() {\n    this.fetchTasks();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}