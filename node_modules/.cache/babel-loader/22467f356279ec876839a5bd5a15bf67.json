{"ast":null,"code":"import _objectSpread from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapActions, mapState } from \"pinia\";\nimport taskStore from \"@/store/task\";\nexport default {\n  name: \"taskToBeAdded\",\n  data: function data() {\n    return {\n      newTitle: \"\"\n    };\n  },\n  computed: _objectSpread({}, mapState(userStore, [\"task\"])),\n  methods: _objectSpread(_objectSpread({}, mapActions(taskStore, [\"fetchTasks\", \"addTask\"])), {}, {\n    newTask: function newTask() {\n      this.addTask(this.newTitle, this.user.id);\n      this.newTitle = '';\n    }\n  }),\n  created: function created() {\n    this.fetchTasks();\n  }\n};","map":{"version":3,"mappings":";AAeA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,eADO;EAEbC,IAFa,kBAEN;IACL,OAAO;MACLC,QAAQ,EAAE;IADL,CAAP;EAGD,CANY;EAObC,QAAQ,oBACHL,QAAQ,CAACM,SAAD,EAAY,CAAC,MAAD,CAAZ,CADL,CAPK;EAUbC,OAAO,kCACFR,UAAU,CAACE,SAAD,EAAY,CAAC,YAAD,EAAe,SAAf,CAAZ,CADR;IAELO,OAFK,qBAEK;MACN,KAAKC,OAAL,CAAa,KAAKL,QAAlB,EAA4B,KAAKM,IAAL,CAAUC,EAAtC;MACA,KAAKP,QAAL,GAAgB,EAAhB;IACJ;EALK,EAVM;EAiBbQ,OAjBa,qBAiBH;IACR,KAAKC,UAAL;EACD;AAnBY,CAAf","names":["mapActions","mapState","taskStore","name","data","newTitle","computed","userStore","methods","newTask","addTask","user","id","created","fetchTasks"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/taskToBeAdded.vue"],"sourcesContent":["<template>\n  <div id='addtask'>\n      <input\n        type=\"text\"\n        required\n        id=\"task\"\n        v-model=\"newTask\"\n        placeholder=\"Type something...\"\n      />\n   \n    <button @click=\"newTask\">Add task</button>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"pinia\";\nimport taskStore from \"@/store/task\";\n\nexport default {\n  name: \"taskToBeAdded\",\n  data() {\n    return {\n      newTitle: \"\",\n    };\n  },\n  computed: {\n    ...mapState(userStore, [\"task\"]),\n  },\n  methods: {\n    ...mapActions(taskStore, [\"fetchTasks\", \"addTask\"]),\n    newTask() {\n        this.addTask(this.newTitle, this.user.id);\n        this.newTitle = '';\n    }\n  },\n  created() {\n    this.fetchTasks();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}