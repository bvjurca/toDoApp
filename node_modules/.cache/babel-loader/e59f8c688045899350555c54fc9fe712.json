{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Sign up\");\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"|\", -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = {\n  \"class\": \"flex flex-col mb-2\"\n};\nvar _hoisted_4 = {\n  \"for\": \"email\",\n  \"class\": \"mb-1 text-sm\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Email: \");\n\nvar _hoisted_6 = {\n  \"class\": \"flex flex-col mb-2\"\n};\nvar _hoisted_7 = {\n  \"for\": \"password\",\n  \"class\": \"mb-1 text-sm\"\n};\n\nvar _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Password: \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_router_link, null, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_1];\n    }),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_2, _createElementVNode(\"form\", null, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"label\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    required: \"\",\n    \"class\": \"p-2 text-gray-500\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.email = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.email]])])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"label\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    \"class\": \"p-2 text-gray-500\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.password = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.password]])])])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.handleSignUp && $options.handleSignUp.apply($options, arguments);\n    })\n  }, \"Sign up \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $options.handleSignIn && $options.handleSignIn.apply($options, arguments);\n    })\n  }, \"Sign in\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;+CACe;;8BACbA,oBAAc,MAAd,EAAc,IAAd,EAAM,GAAN,EAAO;AAAA;AAAP;;;EAGO,SAAM;;;EACF,OAAI;EAAQ,SAAM;;;+CAAe;;;EAIrC,SAAM;;;EACF,OAAI;EAAW,SAAM;;;+CAAe;;;;;6DAV/CC,aAAkCC,sBAAlC,EAAkC,IAAlC,EAAkC;wBAArB;MAAA,OAAO,YAAP;IAAA,EAAqB;;;;EAAA,CAAlC,GACAC,YAEAH,oBAWO,MAXP,EAWO,IAXP,EAWO,CAVLA,oBAIM,KAJN,cAIM,CAHJA,oBAEQ,OAFR,cAEQ,6BADNA,oBAAkF,OAAlF,EAAkF;IAA3EI,IAAI,EAAC,MAAsE;IAA/DC,QAAQ,EAAR,EAA+D;IAAtD,SAAM,mBAAgD;IAA5BC,EAAE,EAAC,OAAyB;;aAARC,aAAKC;;EAAG,CAAlF;;EAAA,kBAA0ED,aACpE,CAFR,CAGI,CAJN,CAUK,EALLP,oBAIM,KAJN,cAIM,CAHJA,oBAEQ,OAFR,cAEQ,6BADNA,oBAA4F,OAA5F,EAA4F;IAArFI,IAAI,EAAC,UAAgF;IAArEC,QAAQ,EAAR,EAAqE;IAA5D,SAAM,mBAAsD;IAAlCC,EAAE,EAAC,UAA+B;;aAAXC,gBAAQC;;EAAG,CAA5F;;EAAA,kBAAiFD,gBAC3E,CAFR,CAGI,CAJN,CAKK,CAXP,GAYAP,oBAA+C,QAA/C,EAA+C;IAAtCS,OAAK;MAAA,OAAEC,yEAAF;IAAA;EAAiC,CAA/C,EAA8B,UAA9B,GACAV,oBAA8C,QAA9C,EAA8C;IAArCS,OAAK;MAAA,OAAEC,yEAAF;IAAA;EAAgC,CAA9C,EAA8B,SAA9B","names":["_createElementVNode","_createVNode","_component_router_link","_hoisted_2","type","required","id","_ctx","$event","onClick","$options"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/views/AuthView.vue"],"sourcesContent":["<template>\n  <router-link>Sign up</router-link>\n  <span>|</span>\n  \n  <form>\n    <div class=\"flex flex-col mb-2\">\n      <label for=\"email\" class=\"mb-1 text-sm\">Email:\n        <input type=\"text\" required class=\"p-2 text-gray-500\" id=\"email\" v-model=\"email\"/>\n      </label>\n    </div>\n    <div class=\"flex flex-col mb-2\">\n      <label for=\"password\" class=\"mb-1 text-sm\">Password:\n        <input type=\"password\" required class=\"p-2 text-gray-500\" id=\"password\" v-model=\"password\"/>\n      </label>\n    </div>\n  </form>\n  <button @click=\"handleSignUp\">Sign up </button>\n  <button @click=\"handleSignIn\">Sign in</button>\n</template>\n<script>\nimport { mapActions, mapState } from 'pinia';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'AuthView',\n  computed: {\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(userStore, ['signUp', 'signIn']),\n    handleSignUp() {\n      const userData = {\n        email: this.email,\n        password: this.password,\n      };\n      this.signUp(userData.email, userData.password);\n    },\n    handleSignIn() {\n      const userData = {\n        email: this.email,\n        password: this.password,\n      };\n      this.signIn(userData.email, userData.password);\n    },\n  },\n  watch: {\n    user() {\n      if (this.user) {\n        console.log(this.user);\n        this.$router.push({ path: '/' });\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}