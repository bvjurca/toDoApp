{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = {\n  \"class\": \"task-in-list\"\n};\nvar _hoisted_3 = [\"onClick\", \"onUpdate:modelValue\", \"id\"];\nvar _hoisted_4 = [\"onUpdate:modelValue\", \"onChange\"];\nvar _hoisted_5 = {\n  key: 0\n};\n\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, function (task) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      id: task.id\n    }, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n      \"aria-label\": \"checkbox\",\n      \"class\": \"checkbox\",\n      onClick: function onClick($event) {\n        return _ctx.handleEditStatus(task.is_complete, task.id);\n      },\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return task.is_complete = $event;\n      },\n      id: task.is_complete\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), [[_vModelCheckbox, task.is_complete]]), _withDirectives(_createElementVNode(\"input\", {\n      \"aria-label\": \"title\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return task.title = $event;\n      },\n      onChange: function onChange($event) {\n        return _ctx.handleEditTitle(task.title, task.id);\n      }\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_4), [[_vModelText, task.title]]), task.is_complete ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \" Done\")) : _createCommentVNode(\"v-if\", true), _hoisted_6, _createElementVNode(\"button\", {\n      onClick: function onClick($event) {\n        return $options.deleteTask(task.id);\n      },\n      \"class\": \"card-link\"\n    }, \"Remove Task\", 8\n    /* PROPS */\n    , _hoisted_7)])], 8\n    /* PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;EAGW,SAAM;;;;;;;;8BAciCA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;;uBAhBhDC,oBAoBM,KApBN,EAoBM,IApBN,EAoBM,oBAnBJA,oBAkBMC,SAlBN,EAkBM,IAlBN,EAkBMC,YAlBcC,UAkBd,EAlBmB,UAAbC,IAAa,EAAT;yBAAhBJ,oBAkBM,KAlBN,EAkBM;MAlBsBK,GAAG,EAAED,IAAI,CAACE,EAkBhC;MAlBqCA,EAAE,EAAEF,IAAI,CAACE;IAkB9C,CAlBN,GACEP,oBAgBM,KAhBN,cAgBM,iBAfJA,oBAOE,OAPF,EAOE;MANA,cAAW,UAMX;MALA,SAAM,UAKN;MAJCQ,OAAK;QAAA,OAAEJ,sBAAiBC,IAAI,CAACI,WAAtB,EAAmCJ,IAAI,CAACE,EAAxC,CAAF;MAAA,CAIN;MAHAG,IAAI,EAAC,UAGL;;eAFSL,IAAI,CAACI,cAAWE;OAEzB;MADOJ,EAAE,EAAEF,IAAI,CAACI;IAChB,CAPF;;IAAA,kCAKWJ,IAAI,CAACI,cAUZ,kBAPJT,oBAIE,OAJF,EAIE;MAHA,cAAW,OAGX;;eAFSK,IAAI,CAACO,QAAKD;OAEnB;MADCE,QAAM;QAAA,OAAET,qBAAgBC,IAAI,CAACO,KAArB,EAA4BP,IAAI,CAACE,EAAjC,CAAF;MAAA;IACP,CAJF;;IAAA,8BAEWF,IAAI,CAACO,QAKZ,EAFQP,IAAI,CAACI,6BAAjBR,oBAA0C,MAA1C,EAA0Ca,UAA1C,EAA8B,OAA9B,sCAEI,EAFsCC,UAEtC,EADJf,oBAA2E,QAA3E,EAA2E;MAAlEQ,OAAK;QAAA,OAAEQ,oBAAWX,IAAI,CAACE,EAAhB,CAAF;MAAA,CAA6D;MAAtC,SAAM;IAAgC,CAA3E,EAAuD,aAAvD,EAAkE;IAAA;IAAlE,EAAkEU,UAAlE,CACI,CAhBN,EADF;;IAAA;GAkBM,CAlBN;;EAAA,CAmBI,EApBN","names":["_createElementVNode","_createElementBlock","_Fragment","_renderList","_ctx","task","key","id","onClick","is_complete","type","$event","title","onChange","_hoisted_5","_hoisted_6","$options","_hoisted_7"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/components/TaskList.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"task in tasks\" :key=\"task.id\" :id=\"task.id\">\n      <div class='task-in-list'>\n        <input\n          aria-label=\"checkbox\"\n          class=\"checkbox\"\n          @click=\"handleEditStatus(task.is_complete, task.id)\"\n          type=\"checkbox\"\n          v-model=\"task.is_complete\"\n          v-bind:id=\"task.is_complete\"\n        />\n        <input\n          aria-label=\"title\"\n          v-model=\"task.title\"\n          @change=\"handleEditTitle(task.title, task.id)\"\n        />\n        <span v-if=\"task.is_complete\"> Done</span><br />\n        <button @click=\"deleteTask(task.id)\" class=\"card-link\">Remove Task</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'pinia';\nimport taskStore from '@/store/task';\n\nexport default {\n  name: 'ShowTasks',\n  computed: {\n    ...mapState(taskStore, ['tasks']),\n  },\n  methods: {\n    ...mapActions(taskStore, ['deleteTask', 'editStatus', 'editTitle']),\n\n    deleteTask(taskId) {\n      try {\n        this.del(taskId);\n        alert('Task deleted');\n      } catch (error) {\n        alert('Error: ', error.message);\n      }\n    },\n\n  },\n  watch: {\n    tasks(state) {\n      console.log(state);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}