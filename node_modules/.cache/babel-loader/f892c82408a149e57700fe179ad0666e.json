{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/bogdia/IronHack/toDoApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { mapActions, mapState } from \"pinia\";\nimport userStore from \"@/store/user\";\nexport default {\n  name: \"RegisterView\",\n  data: function data() {\n    return {\n      errorMsg: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPass: \"\"\n    };\n  },\n  computed: _objectSpread({}, mapState(userStore, [\"user\"])),\n  methods: _objectSpread(_objectSpread({}, mapActions(userStore, [\"signUp\"])), {}, {\n    handleSignUp: function handleSignUp() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this.password === _this.confirmPass) {\n                  try {\n                    userData = {\n                      email: _this.email,\n                      password: _this.password\n                    };\n\n                    _this.signUp(userData.email, userData.password);\n                  } catch (error) {\n                    _this.errorMsg = error.message;\n                  }\n                } else _this.errorMsg = \"Passwords do not match!\";\n\n                setTimeout(function () {\n                  _this.errorMsg = null;\n                }, 3000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }),\n  watch: {\n    user: function user() {\n      if (this.user) {\n        this.$router.push({\n          path: \"/\"\n        });\n      } else {\n        this.$router.push({\n          path: \"/auth\"\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAuCA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,cADO;EAEbC,IAFa,kBAEN;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,KAAK,EAAE,EAFF;MAGLC,QAAQ,EAAE,EAHL;MAILC,WAAW,EAAE;IAJR,CAAP;EAMD,CATY;EAUbC,QAAQ,oBACHR,QAAQ,CAACC,SAAD,EAAY,CAAC,MAAD,CAAZ,CADL,CAVK;EAabQ,OAAO,kCACFV,UAAU,CAACE,SAAD,EAAY,CAAC,QAAD,CAAZ,CADR;IAECS,YAFD,0BAEgB;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACnB,IAAI,KAAI,CAACJ,QAAL,KAAkB,KAAI,CAACC,WAA3B,EAAwC;kBACtC,IAAI;oBACII,QADJ,GACe;sBACfN,KAAK,EAAE,KAAI,CAACA,KADG;sBAEfC,QAAQ,EAAE,KAAI,CAACA;oBAFA,CADf;;oBAKF,KAAI,CAACM,MAAL,CAAYD,QAAQ,CAACN,KAArB,EAA4BM,QAAQ,CAACL,QAArC;kBACF,CANA,CAME,OAAOO,KAAP,EAAc;oBACd,KAAI,CAACT,QAAL,GAAgBS,KAAK,CAACC,OAAtB;kBACF;gBACF,CAVA,MAUO,KAAI,CAACV,QAAL,GAAgB,yBAAhB;;gBACPW,UAAU,CAAC,YAAM;kBACf,KAAI,CAACX,QAAL,GAAgB,IAAhB;gBACD,CAFS,EAEP,IAFO,CAAV;;cAZmB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAepB;EAjBI,EAbM;EAgCbY,KAAK,EAAE;IACLC,IADK,kBACE;MACL,IAAI,KAAKA,IAAT,EAAe;QACb,KAAKC,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;MACF,CAFA,MAEO;QACL,KAAKF,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;MACF;IACD;EAPI;AAhCM,CAAf","names":["mapActions","mapState","userStore","name","data","errorMsg","email","password","confirmPass","computed","methods","handleSignUp","userData","signUp","error","message","setTimeout","watch","user","$router","push","path"],"sourceRoot":"","sources":["/Users/bogdia/IronHack/toDoApp/src/views/RegisterView.vue"],"sourcesContent":["<template>\n  <header>\n    <router-link to=\"/auth\">Sign in</router-link>\n    <span> | Sign up</span>\n  </header>\n  <form>\n    <div>\n      <label for=\"email\"\n        >Email:\n        <input type=\"email\" required id=\"email\" v-model=\"email\" />\n      </label>\n    </div>\n    <div>\n      <label for=\"password\"\n        >Password:\n        <input type=\"password\" required id=\"password\" v-model=\"password\" />\n      </label>\n    </div>\n    <div>\n      <label for=\"confirmPass\"\n        >Confirm password:\n        <input\n          type=\"password\"\n          required\n          id=\"confirmPass\"\n          v-model=\"confirmPass\"\n        />\n      </label>\n    </div>\n    <button @click.prevent=\"handleSignUp\">Sign up</button>\n    <Transition>\n      <div v-if=\"errorMsg\" class=\"error-message\">\n        <p>{{ errorMsg }}</p>\n      </div>\n    </Transition>\n  </form>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"pinia\";\nimport userStore from \"@/store/user\";\n\nexport default {\n  name: \"RegisterView\",\n  data() {\n    return {\n      errorMsg: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPass: \"\",\n    };\n  },\n  computed: {\n    ...mapState(userStore, [\"user\"]),\n  },\n  methods: {\n    ...mapActions(userStore, [\"signUp\"]),\n    async handleSignUp() {\n      if (this.password === this.confirmPass) {\n        try {\n          const userData = {\n            email: this.email,\n            password: this.password,\n          };\n          this.signUp(userData.email, userData.password);\n        } catch (error) {\n          this.errorMsg = error.message;\n        }\n      } else this.errorMsg = \"Passwords do not match!\";\n      setTimeout(() => {\n        this.errorMsg = null;\n      }, 3000);\n    },\n  },\n  watch: {\n    user() {\n      if (this.user) {\n        this.$router.push({ path: \"/\" });\n      } else {\n        this.$router.push({ path: \"/auth\" });\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 0.5s ease-in-out;\n}\n\n.v-enter-from,\n.v-leave-to {\n  opacity: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}